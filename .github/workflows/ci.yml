name: Maven CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job 1: Construcción del proyecto
  build:
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout del código
        uses: actions/checkout@v4

      # Paso 2: Configurar JDK
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven 

      # Paso 3: Construcción del proyecto
      - name: Build Project
        run: mvn clean install

  # Job 2: Pruebas unitarias
  tests:
    runs-on: ubuntu-latest
    needs: build  # Depende del job de construcción
    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout del código
        uses: actions/checkout@v4

      # Paso 2: Configurar JDK
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven 

      # Paso 3: Ejecutar pruebas unitarias
      - name: Run Tests
        run: mvn test

  # Job 3: Generación de métricas
  metrics:
    runs-on: ubuntu-latest
    needs: tests  # Depende del job de pruebas unitarias
    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout del código
        uses: actions/checkout@v4

      # Paso 2: Configurar JDK
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven 

      # Paso 3: Ejecutar Checkstyle
      - name: Checkstyle Analysis
        run: mvn checkstyle:checkstyle
      - name: Output Checkstyle Results
        if: always()
        run: cat target/checkstyle-result.xml || echo "Checkstyle report not found"

      # Paso 4: Ejecutar SpotBugs
      - name: SpotBugs Analysis
        run: mvn spotbugs:spotbugs
      - name: Output SpotBugs Results
        if: always()
        run: cat target/spotbugsXml.xml || echo "SpotBugs report not found"

      # Paso 5: Generar reporte de cobertura con JaCoCo
      - name: Generate Coverage Report
        run: mvn clean verify
      - name: Output JaCoCo Coverage Report
        if: always()
        run: cat target/site/jacoco/jacoco.xml || echo "JaCoCo coverage report not found"

      # Paso 6: Subir artefactos generados
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Maven-Reports
          path: |
            target/site/jacoco/jacoco.xml
            target/checkstyle-result.xml
            target/spotbugsXml.xml
